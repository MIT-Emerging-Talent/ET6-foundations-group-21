#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Created on 04/01/2025
@author: Peter Ngugi
"""

import unittest

from solutions import merge_two_sorted_lists


class TestMergeTwoLists(unittest.TestCase):
    """Tests for the merge_two_sorted_lists function"""

    def test_two_single_digit_lists(self):
        """Should return a single sorted list merged from the two single-digit lists"""
        actual = merge_two_sorted_lists([1, 3, 5], [2, 4, 6])
        expected = [1, 2, 3, 4, 5, 6]
        self.assertEqual(actual, expected)

    def test_one_list_empty(self):
        """Should return a list containing values of the single list provided"""
        actual = merge_two_sorted_lists([], [1, 2, 3])
        expected = [1, 2, 3]
        self.assertEqual(actual, expected)

    def test_both_lists_empty(self):
        """Should return an empty list"""
        actual = merge_two_sorted_lists([], [])
        expected = []
        self.assertEqual(actual, expected)

    def test_lists_unequal_length(self):
        """Should return a single sorted list"""
        actual = merge_two_sorted_lists([1, 4], [2, 3, 5, 6])
        expected = [1, 2, 3, 4, 5, 6]
        self.assertEqual(actual, expected)

    def test_equal_length_lists(self):
        """Should return a single sorted list when both lists have the same length"""
        actual = merge_two_sorted_lists([1, 3, 5], [2, 4, 6])
        expected = [1, 2, 3, 4, 5, 6]
        self.assertEqual(actual, expected)

    def test_lists_with_negatives(self):
        """Should return a single sorted list with negative numbers"""
        actual = merge_two_sorted_lists([-5, -2, 0], [-4, 1, 3])
        expected = [-5, -4, -2, 0, 1, 3]
        self.assertEqual(actual, expected)


if __name__ == "__main__":
    unittest.main()
