#!/usr/bin/env python3
#-*- coding: utf-8 -*-
"""
    Created on 04/01/2025
    @author: Peter Ngugi
"""
def merge_two_sorted_lists(l1: list, l2: list) -> list:
    """
    Merges two sorted Python lists and returns a single sorted list.
    
    Parameters:
        l1 (list): The first sorted list.
        l2 (list): The second sorted list.
        
    Returns:
        list: A single sorted list merged from the two input lists.
        
    Examples:
    >>> merge_two_sorted_lists([1, 3, 6], [4, 8, 9])
    [1, 3, 4, 6, 8, 9]
    
    >>> merge_two_sorted_lists([11, 34, 41], [33, 37, 65])
    [11, 33, 34, 37, 41, 65]
    
    >>> merge_two_sorted_lists([], [4, 77, 90])
    [4, 77, 90]
    
    >>> merge_two_sorted_lists([], [])
    []
    """
    if not isinstance(l1, list) or not isinstance(l2, list):
        raise TypeError("Both inputs must be lists.")
      
    i, j = 0, 0
    merged = []
    
    # Merge while there are elements in both lists
    while i < len(l1) and j < len(l2):
        if l1[i] <= l2[j]:
            merged.append(l1[i])
            i += 1
        else:
            merged.append(l2[j])
            j += 1
            
    # Append any remaining elements
    merged.extend(l1[i:])
    merged.extend(l2[j:])
    
    return merged
